designrule {
Main = Title Parameters Imports DesignRuleQuery OnFailure
Title = sharp+ "design" "rule" #(anythingToEOL)
Parameters = sharp+ "parameters" #(anythingToEOL) parameterIdentifier+
Imports = sharp+ "imports" #(anythingToEOL) importid+
DesignRuleQuery = sharp+ "rule" #(anythingToEOL) Forall
OnFailure = sharp+ "on" "failure" #(printLine+)

Forall = "forall" ForAllClause QueryClause+ "end" "forall"

QueryClause
  = "cond" QueryClause+ "end" "cond" -- cond
  | PrologClause                     -- other
printLine = ~sharp notNL* nl

  ForAllClause = PrologClause

  PrologClause 
    = identifier "(" prologArgs+ ")" -- clauseWithArgs
    | identifier "=" identifier     -- assignment
    | "(" prologArgs+ ")"           -- parenthesized
    | identifier                    -- clauseWithoutArgs

  prologArgs
    = "(" prologArgs+ ")"            -- nested
    | ~")" ~"(" any                  -- other

  parameterIdentifier = identifier
  
    importid = identifier
    keyword = "end" | "cond" | "forall" | "failure"
    sharp = "#"
    anythingToEOL = notNL* nl
    nl = "\n"
    notNL = ~nl any
    identifier = ~keyword firstChar restChar*
    firstChar = "A" .. "Z"  | "a" .. "z" | "_"
    restChar = "0" .. "9" | firstChar
    comment = "%%" anythingToEOL
    space += comment
}
